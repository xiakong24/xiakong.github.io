<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>XiaKong&#39; Blog</title>
  
  <subtitle>我的私人博客</subtitle>
  <link href="https://xiakong24.github.io/atom.xml" rel="self"/>
  
  <link href="https://xiakong24.github.io/"/>
  <updated>2021-06-29T12:32:43.478Z</updated>
  <id>https://xiakong24.github.io/</id>
  
  <author>
    <name>XiaKong</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>clash的Docker部署</title>
    <link href="https://xiakong24.github.io/posts/d16dfd6d/"/>
    <id>https://xiakong24.github.io/posts/d16dfd6d/</id>
    <published>2021-06-29T06:31:30.000Z</published>
    <updated>2021-06-29T12:32:43.478Z</updated>
    
    <content type="html"><![CDATA[<p>Clash for docker， 一个运行在docker上的代理客户端</p><p><img src="https://user-images.githubusercontent.com/1166872/47954055-97e6cb80-dfc0-11e8-991f-230fd40481e5.png" /></p><span id="more"></span><h1 id="部署">部署</h1><ol type="1"><li><p>下载对应 docker 镜像</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull dreamacro/clash-premium:latest</span><br></pre></td></tr></table></figure></p></li><li><p>配置 config.yaml 文件</p><p>其实直接把 <code>clash for windows</code> 的配置文件取出来就行，记得把 <code>HTTP Proxy Port</code> 和 <code>SOCKS5 Proxy Port</code> 删除，然后配置 <code>Mixed Port</code> 就行，另外把配置文件中 <code>external-controller</code> 的值改为 <code>0.0.0.0:9090</code>，然后 <code>cd</code> 到 <code>clash</code> 文件夹里面才 ok</p></li><li><p>运行 docker</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name=clash -v <span class="string">&quot;<span class="variable">$PWD</span>/config.yaml:/root/.config/clash/config.yaml&quot;</span> -p <span class="string">&quot;10808:10808&quot;</span> -p <span class="string">&quot;9090:9090&quot;</span> --restart=unless-stopped dreamacro/clash-premium</span><br></pre></td></tr></table></figure></p></li><li><p>静态控制网页</p><p><a href="http://yacd.haishan.me/">http://yacd.haishan.me/</a> 填入对应网址：9090</p></li></ol><h1 id="参考">参考</h1><ol type="1"><li><a href="https://www.mokeyjay.com/archives/2787">使用 Docker 搭建图形化 Clash 服务端并添加订阅的操作流程解决方法</a></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;Clash for docker， 一个运行在docker上的代理客户端&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1166872/47954055-97e6cb80-dfc0-11e8-991f-230fd40481e5.png&quot; /&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="软件" scheme="https://xiakong24.github.io/doc/categories/%E8%BD%AF%E4%BB%B6/"/>
    
    
    <category term="教程" scheme="https://xiakong24.github.io/doc/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="docker" scheme="https://xiakong24.github.io/doc/tags/docker/"/>
    
    <category term="服务器" scheme="https://xiakong24.github.io/doc/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>Lie群学习笔记</title>
    <link href="https://xiakong24.github.io/posts/40febe0c/"/>
    <id>https://xiakong24.github.io/posts/40febe0c/</id>
    <published>2021-06-26T12:46:56.000Z</published>
    <updated>2021-06-28T15:44:21.332Z</updated>
    
    <content type="html"><![CDATA[<p><strong>利用 Lie 群求解微分方程的5步法</strong></p><table><colgroup><col style="width: 6%" /><col style="width: 93%" /></colgroup><thead><tr class="header"><th>步骤</th><th>操作</th></tr></thead><tbody><tr class="odd"><td>1</td><td>计算微分方程的<strong>无穷小生成元</strong> <span class="math inline">\(V^{(k)}\)</span></td></tr><tr class="even"><td>2</td><td>如果<span class="math inline">\(r&gt;2\)</span>，则需要确定其<strong>子代数</strong> <span class="math inline">\(\mathcal{L_2}\subset\mathcal{L_r}\)</span>。如果<span class="math inline">\(r&lt;2\)</span>，微分方程不能利用 Lie 群进行简化求解（<span class="math inline">\(r=2\)</span> 的情况总是可解的）</td></tr><tr class="odd"><td>3</td><td>计算<span class="math inline">\(X_2\)</span>基的<strong>交换子</strong><span class="math inline">\([X_1,X_2]\)</span>和$ X_1X_2 $。</td></tr><tr class="even"><td>4</td><td>引入<strong>正则变量</strong>，把微分方程改写为正则变量的形式，积分求解。</td></tr><tr class="odd"><td>5</td><td>把解变为原来变量的形式，即得到<strong>原方程的解</strong></td></tr></tbody></table><span id="more"></span><h1 id="群">群</h1><p>​ 数学中，<strong>群</strong>是一种代数结构，由一个集合和一个二元运算组成。</p><h2 id="群公理的4个基本要求"><strong>群公理的4个基本要求</strong></h2><ol type="1"><li>封闭性：对于所有集合<span class="math inline">\(G\)</span>中的<span class="math inline">\(a\)</span>， <span class="math inline">\(b\)</span>，运算<span class="math inline">\(a\cdot b\)</span> 的结果也在<span class="math inline">\(G\)</span>中。</li><li>结合律：对于所有集合<span class="math inline">\(G\)</span>中的<span class="math inline">\(a\)</span>， <span class="math inline">\(b\)</span> 和<span class="math inline">\(c\)</span>，等式<span class="math inline">\((a\cdot b)\cdot c=a\cdot (b\cdot c)\)</span> 成立（注意排序）。</li><li>单位元：<span class="math inline">\(G\)</span>中存在一个元素<span class="math inline">\(e\)</span>，使得对于所有的<span class="math inline">\(G\)</span>中元素<span class="math inline">\(a\)</span>，等式<span class="math inline">\(e\cdot a=a \cdot e=a\)</span>恒成立。</li><li>逆元：对于每个<span class="math inline">\(G\)</span>中的<span class="math inline">\(a\)</span>，存在<span class="math inline">\(G\)</span>中的一个元素<span class="math inline">\(b\)</span> 使得<span class="math inline">\(a\cdot b= b \cdot a=e\)</span>，这里<span class="math inline">\(e\)</span>是单位元。</li></ol><p><strong>注意：</strong> 交换律并不总成立，其中交换律总成立的群被称为Abel 群/交换群。</p><h2 id="变换群"><strong>变换群</strong></h2><p>​ <span class="math inline">\(n\)</span>维线性空间<span class="math inline">\(V\)</span>内的线性变换，将元素<span class="math inline">\(\boldsymbol{a}=(a_1,a_2,\cdots,a_n)\in V\)</span>利用变换<span class="math inline">\(X\)</span>到另个一元素 <span class="math inline">\(\boldsymbol{b}=(b_1,b_2,\cdots,b_n)=\boldsymbol X：\boldsymbol{a}\in V\)</span>，这种变换<span class="math inline">\(X\)</span>的集合<span class="math inline">\(G\)</span>构成了群：</p><ol type="1"><li><p>封闭性：<span class="math inline">\(\boldsymbol X_1\in G\)</span>， 且<span class="math inline">\(\boldsymbol X_2\in G\)</span> ，则有<span class="math inline">\(\boldsymbol X_1\boldsymbol X_2\in G\)</span>。</p></li><li><p>结合律：<span class="math inline">\(\boldsymbol X_1,\boldsymbol X_2~\text{and}~\boldsymbol X_3\in G\)</span>，则有<span class="math inline">\((\boldsymbol X_1\boldsymbol X_2)\boldsymbol X_3:\boldsymbol{a}=\boldsymbol X_1(\boldsymbol X_2\boldsymbol X_3):\boldsymbol{a}\)</span>。</p></li><li><p>单位元：定义恒等变换<span class="math inline">\(\boldsymbol X_e\in G\)</span>满足<span class="math inline">\(\boldsymbol X_e:\boldsymbol{a}=\boldsymbol{a}\)</span>，对于所有<span class="math inline">\(\boldsymbol X_i\)</span>满足<span class="math inline">\(\boldsymbol X_i\boldsymbol X_e:\boldsymbol{a}=\boldsymbol X_e\boldsymbol X_i:\boldsymbol{a}\)</span>，即恒等变换<span class="math inline">\(\boldsymbol X_e\)</span>为单位元。</p></li><li><p>逆元：<span class="math inline">\(\boldsymbol X_i\in G\)</span>的逆变换<span class="math inline">\(\boldsymbol X_i&#39;\in G\)</span> 满足<span class="math inline">\(\boldsymbol X_i\boldsymbol X_i&#39;:\boldsymbol{a}=\boldsymbol X_e:\boldsymbol{a}\)</span>。</p><p>此时，称<span class="math inline">\(G\)</span>为<span class="math inline">\(V\)</span>上的变换群。(此时V不在局限于线性空间)</p></li></ol><h1 id="单参数-lie-群和-lie-级数">单参数 Lie 群和 Lie 级数</h1><h2 id="无限连续群"><strong>无限连续群</strong></h2><p>​ 若变换可以用一个参数来表征，并且参数可连续变化，这种变化的全体组成一个<strong>无限连续群</strong>，定义如下：</p><p>​ 设 <span class="math inline">\(\boldsymbol{x}=(x_1,x_2,\cdots,x_n)\in D\subset \mathbb{R}^n\)</span>， <span class="math inline">\(\epsilon \in S \subset \mathbb{R}\)</span> 则称满足下列条件的变换 <span class="math display">\[\boldsymbol{x^*}=\boldsymbol X(\boldsymbol{x};\epsilon)\in D\label{bhq}\tag{1}\]</span> 的全体<span class="math inline">\(G\)</span>为<span class="math inline">\(D\)</span>上的<strong>变换群</strong>：</p><ol type="1"><li><p>对于<span class="math inline">\(\forall \epsilon \in S\)</span>，Eq.<span class="math inline">\(~\eqref{bhq}\)</span>在<span class="math inline">\(D\)</span>上是一一变换</p></li><li><p>具有二元运算关系<span class="math inline">\(\phi\)</span>的<span class="math inline">\(S\)</span>构成群（PS：二元运算定义为群的“乘法”，但不一定满足交换律）：</p><p>这里根据：<span class="math inline">\(\boldsymbol{x^\circ} = \boldsymbol X(\boldsymbol{x^*};\delta)=\boldsymbol X(\boldsymbol X(\boldsymbol{x};\epsilon);\delta)\)</span>，若：<span class="math inline">\(\boldsymbol{x^\circ}=\boldsymbol X(\boldsymbol{x};\epsilon_1)\)</span>，则有<span class="math inline">\(\epsilon_1=f(\epsilon,\delta),\)</span> 此时<span class="math inline">\(\phi\)</span>亦构成群，<span class="math inline">\(f\)</span>称为合成率。</p></li><li><p>当<span class="math inline">\(\epsilon=\epsilon_e\)</span>时，有<span class="math inline">\(\boldsymbol{x}=\boldsymbol X(\boldsymbol{x};\epsilon_e)\)</span>。</p></li></ol><p>如果上述<span class="math inline">\(D\)</span>上的变换群<span class="math inline">\(G\)</span>还满足：</p><ol start="4" type="1"><li><span class="math inline">\(\epsilon\)</span>连续。</li><li><span class="math inline">\(\boldsymbol X\)</span>关于<span class="math inline">\(\boldsymbol{x}\in D\)</span>是无穷次可微的，<span class="math inline">\(\epsilon \in S\)</span>是解析的。</li><li><span class="math inline">\(f(\epsilon_1,\epsilon_2)\)</span>是<span class="math inline">\(\epsilon_1,\epsilon_2\)</span>的解析函数<span class="math inline">\(\epsilon_1,\epsilon_2\in S\)</span>。</li></ol><p>则称<span class="math inline">\(G\)</span>为<span class="math inline">\(D\)</span>上的<strong>单参数变换群/Lie点变换群</strong>，简记为 OPG。</p><p>​ 因为连续群是由<span class="math inline">\(n\)</span>个连续变量之间变化而生成的，这<span class="math inline">\(n\)</span>个变量同时也构成一个n维空间。19世纪后期， Sophus Lie 提出连续变换群的概念：如果一个由<span class="math inline">\(n\)</span>个变量生成的连续群既有群的结构，又是一个<span class="math inline">\(n\)</span>维微分流形，便称为Lie群。</p><p><strong>举例</strong>：</p><ol type="1"><li>在<span class="math inline">\((x,y)\)</span>平面，假设变换</li></ol><p><span class="math display">\[\boldsymbol X_\epsilon: \hat{x}=\phi(x,y,\epsilon),~~~~~~~\hat{y}=\psi(x,y,\epsilon)\label{ts}\tag{2}\]</span> 且满足：</p><ul><li>恒等式：<span class="math inline">\(\epsilon=0\)</span>时</li></ul><p><span class="math display">\[\boldsymbol X_0:\hat{x}=\phi(x,y,0)=x,~~~~~~~\hat{y}=\psi(x,y,0)=y\]</span></p><ul><li>反向变换：<span class="math inline">\(\epsilon\)</span>变换为<span class="math inline">\(\epsilon^{-1}\)</span>时：</li></ul><p><span class="math display">\[\boldsymbol X_{\epsilon^{-1}}:x=\phi(\hat{x},\hat{y},\epsilon^{-1}),~~~~~~~y=\psi(\hat{x},\hat{y},\epsilon^{-1})\]</span></p><ul><li>闭合：</li></ul><p><span class="math display">\[\boldsymbol X_\delta:\bar{x}=\phi(\hat{x},\hat{y},\delta),~~~~~~~\bar{y}=\psi(\hat{x},\hat{y},\delta)\]</span></p><p>​ 联立 Transformation<span class="math inline">\(~\eqref{ts}\)</span>，变换的乘积<a href="#变换的证明">附录1</a>为: <span class="math display">\[\boldsymbol X_{\epsilon+\delta}: \bar{x} =\phi(\hat{x},\hat{y},\delta)=\phi(x,y,\epsilon+\delta),~~~~~~~\bar{y}=\psi(\hat{x},\hat{y},\delta)=\psi(x,y,\epsilon+\delta)\]</span></p><ol start="2" type="1"><li>几个简单的单参数连续群：<ul><li>平移群：<span class="math inline">\(\hat{x}=x+\epsilon,\hat{y}=y+\epsilon\)</span></li><li>拉伸群：<span class="math inline">\(\hat{x}=e^\epsilon x,\hat{y}=e^\epsilon y\)</span></li><li>转动群：<span class="math inline">\(\hat{x}=x\cos \epsilon-y \sin \epsilon,\hat{y}=x\sin \epsilon+y\cos \epsilon\)</span></li><li>投影变换群：<span class="math inline">\(\hat{x}=x/(1-\epsilon x),\hat{y}=y/(1-\epsilon y)\)</span></li></ul></li></ol><h2 id="无穷小生成元"><strong>无穷小生成元</strong></h2><h3 id="无穷小">无穷小</h3><h4 id="无穷小变换">无穷小变换</h4><p>​ 定义单参数Lie变换群：</p><p><span class="math display">\[\boldsymbol x^*=\boldsymbol X(\boldsymbol x,\epsilon)\]</span> 在<span class="math inline">\(\epsilon=0\)</span>附近展开 <span class="math display">\[\boldsymbol x^*=\boldsymbol x+\epsilon\left[\frac{\partial\boldsymbol x}{\partial \epsilon}(\boldsymbol x;\epsilon)\bigg|_{\epsilon=0}\right]+\frac{\epsilon^2}{2}\left[\frac{\partial\boldsymbol x^2}{\partial \epsilon^2}(\boldsymbol x;\epsilon)\bigg|_{\epsilon=0}\right]+\cdots\label{wqxxs}\tag{3}\]</span> ​ 若记 <span class="math display">\[\boldsymbol \xi (\boldsymbol x)=\frac{\partial\boldsymbol x}{\partial \epsilon}(\boldsymbol x;\epsilon)\bigg|_{\epsilon=0}\]</span> 则称变换 <span class="math inline">\(\boldsymbol x+\epsilon \boldsymbol \xi(\boldsymbol x)\)</span> 为单参数变换群的<strong>无穷小变换</strong>，该级数称为<strong>Lie 级数</strong>，Eq.<span class="math inline">\(~\eqref{wqxxs}\)</span> 为单参数变换群的<strong>无穷小形式</strong>，<span class="math inline">\(\boldsymbol \xi(\boldsymbol x)=(\xi_1(\boldsymbol x),\xi_2(\boldsymbol x),\cdots,\xi_n(\boldsymbol x))\)</span> 称为<span class="math inline">\(\boldsymbol x\)</span> 的<strong>无穷小</strong>。</p><h4 id="等价初值问题">等价初值问题</h4><p>​ <strong>定理</strong>：存在一个参数化的 <span class="math inline">\(\tau(\epsilon)\)</span> 使得 Lie 变换群 Eq.<span class="math inline">\(~\eqref{wqxxs}\)</span> 等价于如下的形式的一阶微分方程的初值问题： <span class="math display">\[\frac{\text{d}x^*}{\text{d}\tau}=\xi(x^*), ~~~~~~~x^*|_{\tau=0}=x\label{czwt}\tag{4}\]</span> 其中 <span class="math display">\[\tau(\epsilon)=\int_0^\epsilon\theta(\epsilon&#39;)\text{d}\epsilon&#39;,~~~~~~\theta(\epsilon)=\frac{\partial f(a,b)}{\partial b}\bigg|_{(a,b)=(\epsilon^{-1},\epsilon)},~~~~~~\theta(0)=1\label{bh}\tag{5}\]</span> 特别地，当 <span class="math inline">\(f(a,b)=a+b\)</span> 时，初值问题 <span class="math inline">\(\eqref{czwt}\)</span> 转化为 <span class="math display">\[\frac{\text{d}x^*}{\text{d}\epsilon}=\xi(x^*),~~~~~~~x^*|_{\epsilon=0}=x\]</span></p><h3 id="无穷小生成子">无穷小生成子</h3><p>​ <strong>定义</strong>：算子 <span class="math display">\[V=V(\boldsymbol x)=\boldsymbol \xi(\boldsymbol x)\cdot \nabla=\sum_{i=1}^{n}\xi_i(\boldsymbol x)\frac{\partial}{\partial x_i}\]</span> 称为单参数 Lie 变换群 <span class="math inline">\(\boldsymbol x^*=\boldsymbol X(\boldsymbol x;\epsilon)\)</span> 的<strong>无穷小生成子（无穷小生成元）</strong>。(包含了变换群的全部信息)</p><p>​ 则单参数 Lie 变换群 <span class="math inline">\(\boldsymbol x^*=\boldsymbol X(\boldsymbol x;\epsilon)\)</span> 可以表示为 <span class="math display">\[\boldsymbol x^*=e^{\epsilon V}\boldsymbol x=\boldsymbol x+\epsilon V\boldsymbol x+\frac{\epsilon^2}{2} V^2\boldsymbol x+\cdots=\sum_{i=1}^n\frac{\epsilon^k}{k!} V^k\boldsymbol x\]</span> 其中 <span class="math inline">\(V^k=V V^{K-1}\)</span>，<span class="math inline">\(V^{0}\)</span> 为恒等算子。（<strong>注意</strong>这个使用条件，认定<span class="math inline">\(\boldsymbol x\)</span>的分量线性无关）</p><p>​ 对于任意可微函数<span class="math inline">\(F(x)\)</span>，有 <span class="math display">\[\frac{\text{d}}{\text{d}\epsilon}F(\boldsymbol x^*)=\sum_{i=1}^n\xi_i(\boldsymbol x^*)\frac{\partial}{\partial x_i^*}F(\boldsymbol x^*)=V(\boldsymbol x^*)F(\boldsymbol x^*)\]</span> 所以 <span class="math display">\[\frac{\text{d}^k}{\text{d}\epsilon^k}\boldsymbol x^*\bigg|_{\epsilon=0}=V^k(\boldsymbol x^*)\boldsymbol x^*\bigg|_{\epsilon=0}=V^k\boldsymbol x\]</span> ​ <strong>定义：不变函数</strong></p><p>​ 如果对于任意的 <span class="math inline">\(\boldsymbol x\in D\)</span>，<span class="math inline">\(\epsilon \in S\)</span> 有光滑函数 <span class="math inline">\(F(x)\)</span> 满足 <span class="math display">\[F(\boldsymbol x^*)=F(\boldsymbol x)\]</span> 则称 <span class="math inline">\(F(\boldsymbol x)\)</span>为 Lie 变换群 Eq.<span class="math inline">\(~\eqref{wqxxs}\)</span> 的<strong>不变函数</strong>。当且仅当 <span class="math display">\[VF(\boldsymbol x)=0\]</span> 对于任意 <span class="math inline">\(\boldsymbol x \in D\)</span> 成立。若 <span class="math inline">\(F(\boldsymbol x)=0\)</span>， 则其也称为变换群的不变曲面。</p><h2 id="无穷小的延拓变换"><strong>无穷小的延拓变换</strong></h2><p>​ <strong>目的</strong>：将代数方程不变群的一些结论拓展到微分方程的不变群。</p><p>​ <strong>思路</strong>：将自变量和因变量空间进一步延拓，在延拓空间中，<strong>自变量</strong>、<strong>因变量</strong>以及因变量对自变量的各阶<strong>导数</strong>都看作空间元素。</p><h3 id="单参数-lie-变换群的延拓">单参数 Lie 变换群的延拓</h3><p>​ <strong>例如</strong>：</p><p>​ <span class="math inline">\(k\)</span>阶常微分方程的无穷小变换<span class="math inline">\(y=y(x)\)</span>： <span class="math display">\[x^*=X(x,y,\epsilon),~~~~~~y^*=Y(x,y,\epsilon)\label{kjcwf}\tag{6}\]</span> 记： <span class="math display">\[y_i=\frac{\text{d}^iy}{\text{d} x^i},~~~~~i=1,2,\ldots,k\]</span></p><p>将 Eq.<span class="math inline">\(~\eqref{kjcwf}\)</span> 延拓到 <span class="math inline">\((x,y,y_1,y_2,\cdots,y_k)\)</span> 空间，有</p><p><span class="math display">\[y_i^*=\frac{\text{d}^iy^*}{\text{d} (x^*)^i}\]</span> ​ 此处以求 <span class="math inline">\(y_1^*\)</span> 为例： <span class="math display">\[y_1^*= Y_1(x,y,y_1,\epsilon)=\frac{\text{d}y^*}{\text{d} x^*}=\frac{\frac{\partial Y}{\partial x}\text{d}x+\frac{\partial Y}{\partial y}\frac{\text{d}y}{\text{d} x}\text{d} x}{\frac{\partial X}{\partial x}\text{d}x+\frac{\partial X}{\partial y}\frac{\text{d}y}{\text{d} x}\text{d} x}=\frac{\frac{\partial Y}{\partial x}+y_1\frac{\partial Y}{\partial y}}{\frac{\partial X}{\partial x}+y_1\frac{\partial  X}{\partial y}}\]</span></p><p>​ <strong>定理</strong></p><p>​ 作用在 <span class="math inline">\((x,y)\)</span> 空间上的 Lie 变换群<span class="math inline">\(~\eqref{kjcwf}\)</span> 可以可以延拓到作用在 <span class="math inline">\((x,y,y_1,y_2,\ldots,y_n)\)</span> 空间上的单参数 Lie 变换群 <span class="math display">\[x^*= X(x,y,\epsilon),~~~~y^*= Y(x,y,\epsilon),~~~~y_i^*= Y_i(x,y,y_1,y_2,\ldots,y_i,\epsilon)\]</span> 由数学归纳法，可以求得 <span class="math display">\[y_i^*= Y_i(x,y,y_1,y_2,\ldots,y_i,\epsilon)=\frac{D  Y_{i-1}}{D X}\label{yi}\]</span> 其中 <span class="math inline">\(D\)</span> 为<strong>全微分算子/全导数算子</strong> <span class="math display">\[D=\frac{\partial}{\partial x}+y_1\frac{\partial}{\partial y}+\cdots+y_i\frac{\partial}{\partial y_{i-1}}\]</span></p><h3 id="无穷小生成子的延拓">无穷小生成子的延拓</h3><p>​ Lie 变换群<span class="math inline">\(~\eqref{kjcwf}\)</span> 的无穷小生成子为 <span class="math display">\[V=\xi(x,y)\frac{\partial}{\partial x}+\eta(x,y)\frac{\partial}{\partial y}\]</span> 考虑对于 <span class="math inline">\(y_i^*\)</span> 在 <span class="math inline">\(\epsilon=0\)</span> 附近展开得 <span class="math display">\[y_i^*=Y_i(x,y,y_1,\ldots,y_i;\epsilon)=y_i+\epsilon \eta^{(i)}(x,y,y_1,\ldots,y_i)+O(\epsilon^2)\]</span> 则经过 <span class="math inline">\(k\)</span> 次延拓后得<strong>无穷小</strong>为 <span class="math display">\[\bigg(\xi(x,y),\eta(x,y),\eta^{(1)}(x,y,y_1),\ldots,\eta^{(k)}(x,y,y_1,\ldots,y_k)\bigg)\]</span> 相应的<strong>无穷小生成子</strong>为 <span class="math display">\[V^{(k)}=V+\sum_{i=1}^{k}\eta^{(i)}(x,y,y_1,\ldots,y_i)\frac{\partial }{\partial y_i}\]</span> 其中 <span class="math inline">\(\eta^{(i)}\)</span> 计算公式为 <span class="math display">\[\begin{aligned}\eta^{(i)}&amp;=\frac{\partial y_i^*}{\partial\epsilon}\Bigg|_{\epsilon=0}=\frac{\partial Y_i}{\partial\epsilon}\Bigg|_{\epsilon=0}=\frac{\partial }{\partial\epsilon}\bigg(\frac{D Y_{i-1}}{D X}\bigg)\Bigg|_{\epsilon=0}=\frac{(D Y_{i-1})_\epsilon DX-D Y_{i-1}(D X)_\epsilon}{(DX)^2}\Bigg|_{\epsilon=0}\\&amp;=\frac{(D Y_{i-1})_\epsilon}{DX}-D Y_{i-1}\frac{(D X)_\epsilon}{(DX)^2}\Bigg|_{\epsilon=0}=\frac{D [(Y_{i-1})_\epsilon]}{DX}-y_i\frac{D( X_\epsilon)}{(DX)^2}\Bigg|_{\epsilon=0}\\&amp;=D\eta^{(i-1)}-y_iD\xi\end{aligned}\]</span> 例如： <span class="math display">\[\begin{aligned}\eta^{(0)}&amp;=\eta(x,y)\\\eta^{(1)}&amp;=\eta_x+(\eta_y-\xi_x)y_1-\xi_y y_1^2\\\eta^{(2)}&amp;=\eta_{xx}+(2\eta_{xy}-\xi_{xx})y_1+(\eta_{yy}-2\xi_{xy})y_1^2-\xi_{yy}y_1^3+(\eta_y-2\xi_x)y_2-3\xi_yy_1y_2\end{aligned}\]</span></p><h2 id="微分方程的不变性">微分方程的不变性</h2><p>​ <strong>决定方程组</strong></p><p>​ 微分方程的对称群将方程的一个解映射到方程的另一个解，微分方程的不变性可以用来导出其对称群所需满足的充分必要条件。该组条件称为对称群的<strong>决定方程组</strong>。</p><p>​ <strong>定理</strong>：</p><p>​ 常微分方程 <span class="math inline">\(G(x,y,y_1,\ldots,y_n)=0\)</span> 关于 Lie 变换群 <span class="math display">\[x^*=\boldsymbol X(x,y,\epsilon),~~~y^*=\boldsymbol Y(x,y,\epsilon)\]</span> 不变的充分必要条件为 <span class="math display">\[V^{(n)} G(x,y,y_1,\ldots,y_n)\bigg|_{G(x)=0}=0\]</span> ​ 此时，若采用 <span class="math inline">\(G(x,y,y_1,\ldots,y_n)=y_n-g(x,y,y_1,\ldots,y_{n-1})\)</span>， 则可以求得 <span class="math display">\[\eta^{(n)}(x,y,y_1,\ldots,y_n)=\xi \frac{\partial g}{\partial x}+\eta \frac{\partial g}{\partial y}+\cdots+\eta^{(n-1)} \frac{\partial g}{\partial y_{n-1}}\]</span> 考虑 <span class="math inline">\(y_1,\ldots,y_{n-1}\)</span> 的任意性，可以分别提取出其各项系数，即可得到一组由 <span class="math inline">\(n-1\)</span> 个线性偏微分方程组成的方程组，变量为 <span class="math inline">\(\eta\)</span> 和 <span class="math inline">\(\xi\)</span>。该方程组称为对称群的<strong>决定方程组</strong>。</p><h1 id="appendix">Appendix</h1><h2 id="变换的证明">变换的证明</h2><p>​ <strong>引理</strong>：<span class="math inline">\(X(\boldsymbol x;\epsilon+\Delta \epsilon)=X(X(\boldsymbol x;\epsilon);f(\epsilon^{-1},\epsilon+\Delta \epsilon))\)</span></p><p>​ <strong>证明</strong>：</p><ol type="1"><li><p><span class="math inline">\(X(X(\boldsymbol x;\epsilon);f(\epsilon^{-1},\epsilon+\Delta \epsilon))=X(\boldsymbol x;f(f(\epsilon,\epsilon^{-1}),\epsilon+\Delta \epsilon))=X(\boldsymbol x;f(0,\epsilon+\Delta \epsilon))=X(\boldsymbol x;\epsilon+\Delta \epsilon)\)</span></p></li><li><p><span class="math inline">\(X(X(\boldsymbol x;\epsilon);f(\epsilon^{-1},\epsilon+\Delta \epsilon))=X_{\epsilon+\Delta \epsilon}X_{\epsilon^{-1}}X_{\epsilon}:\boldsymbol x=X_{\epsilon+\Delta \epsilon}:\boldsymbol x=X(\boldsymbol x;\epsilon+\Delta \epsilon)\)</span></p></li></ol><p>​ <strong>初值问题证明</strong>：</p><p>​ 对于 <span class="math inline">\(f(\epsilon^{-1},\epsilon+\Delta \epsilon)\)</span> 在 <span class="math inline">\(\Delta \epsilon=0\)</span> 附近展开 <span class="math display">\[f(\epsilon^{-1},\epsilon+\Delta \epsilon) = f(\epsilon^{-1},\epsilon)+\theta(\epsilon)\Delta\epsilon+o((\Delta\epsilon)^2)=\theta(\epsilon)\Delta\epsilon+o((\Delta\epsilon)^2)\]</span> 所以，有（复合函数求导链式法则） <span class="math display">\[\begin{aligned}X(x;\epsilon+\Delta \epsilon)&amp;=X(x^*;f(\epsilon^{-1},\epsilon+\Delta \epsilon))\\&amp;= X(x^*;0)+\theta(\epsilon)\Delta\epsilon\frac{\partial X}{\partial \delta}(x^*,\delta)\bigg|_{\delta=0}+o((\Delta\epsilon)^2)\\&amp;=x^*+\theta(\epsilon)\xi(x^*)\Delta \epsilon+o((\Delta\epsilon)^2)\end{aligned}\]</span> 因此，有 <span class="math display">\[\frac{\text{d}x^*}{\text{d}\epsilon}=\theta(\epsilon) \xi(x^*),~~~~~~~x^*|_{\epsilon=0}=x\]</span> ​ 采用变换<span class="math inline">\(~\eqref{bh}\)</span>，则可以化为初值问题<span class="math inline">\(~\eqref{czwt}\)</span>。</p><p>​ <strong>结论</strong>：以上，<span class="math inline">\(\tau(\epsilon)\)</span> 具有任意性，对于任何<span class="math inline">\(f\)</span>，总存在相应的<span class="math inline">\(\tau(\epsilon)\)</span>使得 <span class="math inline">\(f\)</span> 再参数化为<span class="math inline">\(f(a,b)=a+b\)</span>， 因此，不失一般性，假设<span class="math inline">\(f(a,b)=a+b\)</span>，<span class="math inline">\(\theta(\epsilon)=1\)</span>.</p><h1 id="references">References</h1><ol type="1"><li>郭玉翠，《非线性偏微分方程引论》，清化大学出版社，（2008）。</li><li>孙博华，《量纲分析与 Lie 群》，高等教育出版社，（2016）。</li><li>田畴，《李群及其在微分方程中的应用》，科学出版社，（2001）。</li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;利用 Lie 群求解微分方程的5步法&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;colgroup&gt;
&lt;col style=&quot;width: 6%&quot; /&gt;
&lt;col style=&quot;width: 93%&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr class=&quot;header&quot;&gt;
&lt;th&gt;步骤&lt;/th&gt;
&lt;th&gt;操作&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&quot;odd&quot;&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;计算微分方程的&lt;strong&gt;无穷小生成元&lt;/strong&gt; &lt;span class=&quot;math inline&quot;&gt;\(V^{(k)}\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;even&quot;&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;如果&lt;span class=&quot;math inline&quot;&gt;\(r&amp;gt;2\)&lt;/span&gt;，则需要确定其&lt;strong&gt;子代数&lt;/strong&gt; &lt;span class=&quot;math inline&quot;&gt;\(\mathcal{L_2}\subset\mathcal{L_r}\)&lt;/span&gt;。如果&lt;span class=&quot;math inline&quot;&gt;\(r&amp;lt;2\)&lt;/span&gt;，微分方程不能利用 Lie 群进行简化求解（&lt;span class=&quot;math inline&quot;&gt;\(r=2\)&lt;/span&gt; 的情况总是可解的）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;odd&quot;&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;计算&lt;span class=&quot;math inline&quot;&gt;\(X_2\)&lt;/span&gt;基的&lt;strong&gt;交换子&lt;/strong&gt;&lt;span class=&quot;math inline&quot;&gt;\([X_1,X_2]\)&lt;/span&gt;和$ X_1X_2 $。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;even&quot;&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;引入&lt;strong&gt;正则变量&lt;/strong&gt;，把微分方程改写为正则变量的形式，积分求解。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;odd&quot;&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;把解变为原来变量的形式，即得到&lt;strong&gt;原方程的解&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</summary>
    
    
    
    <category term="数学" scheme="https://xiakong24.github.io/doc/categories/%E6%95%B0%E5%AD%A6/"/>
    
    
    <category term="学习" scheme="https://xiakong24.github.io/doc/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="Lie群" scheme="https://xiakong24.github.io/doc/tags/Lie%E7%BE%A4/"/>
    
    <category term="笔记" scheme="https://xiakong24.github.io/doc/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Hexo使用教程</title>
    <link href="https://xiakong24.github.io/posts/b8d83faa/"/>
    <id>https://xiakong24.github.io/posts/b8d83faa/</id>
    <published>2021-06-25T15:45:57.000Z</published>
    <updated>2021-06-29T06:02:36.183Z</updated>
    
    <content type="html"><![CDATA[<h1 id="hexonext的安装">Hexo+Next的安装</h1><p>本文是利用Hexo搭建并生成静态博客，将其托管于Github上，采用的博客主题为Next，一个热门且简洁的主题。以下是总结的简单教程。</p><span id="more"></span><h1 id="软件准备">软件准备</h1><ol type="1"><li><p><a href="https://nodejs.org/zh-cn/download/">nodejs</a>环境</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br><span class="line">npm config set registry https://registry.npm.taobao.org #配置国内镜像源</span><br></pre></td></tr></table></figure></li><li><p><a href="https://git-scm.com/">git</a>环境</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">安装最后一步选择：Use Git from the Windows Command Prompt(添加至环境变量)</span><br><span class="line">git --version</span><br></pre></td></tr></table></figure></li></ol><h1 id="hexo的安装与使用">Hexo的安装与使用</h1><h2 id="hexo的安装与配置">Hexo的安装与配置</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli   #安装hexo</span><br><span class="line">hexo -v</span><br><span class="line">npm update hexo -g   #更新hexo</span><br><span class="line">hexo init “文件夹路径”   #初始化文件</span><br></pre></td></tr></table></figure><h2 id="hexo配置git">Hexo配置git</h2><ol type="1"><li><p>右键选择 <code>Git Gui</code>选择窗口菜单<code>Help</code>中的<code>Show SSH key</code>，在新窗口中点击<code>Generate Key</code>生成新key并拷贝至剪贴板</p></li><li><p>进入<a href="https://github.com/settings/keys">Github设置页面</a>点击<code>SSH and GPG keys</code>，名字任意，然后粘贴上一步中的key，保存</p></li><li><p>回到文件夹，打开<code>gitbash</code> 输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>如果出现用户名，则成功</p></li><li><p>打开博客根目录下的<code>_config.yml</code>文件，修改最后一行的配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/用户名/用户名.github.io.git</span><br><span class="line">  branch: 分支名</span><br></pre></td></tr></table></figure></li></ol><h2 id="生成修改发布文章">生成、修改、发布文章</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">hexo n &quot;文章标题&quot;   #新建博客文章</span><br><span class="line">hexo clean &amp;&amp; hexo s   #本地部署预览</span><br><span class="line">hexo d -g   #上传至github云端</span><br><span class="line">备注：若上传失败，可能是代理问题，cmd设置代理</span><br><span class="line">set http_proxy=http://127.0.0.1:10808</span><br><span class="line">set https_proxy=http://127.0.0.1:10808</span><br></pre></td></tr></table></figure><h1 id="主题next配置">主题Next配置</h1><h2 id="下载next主题">下载<a href="https://github.com/theme-next/hexo-theme-next">Next主题</a></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/theme-next/hexo-theme-next themes/next #若失败，可在https://github.com/前加https://ghproxy.com/作为代理使用</span><br></pre></td></tr></table></figure><p>修改根目录主站点配置文件<code>_config.yml</code>，找到如下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line">theme: landscape #此处landscape替换为next</span><br></pre></td></tr></table></figure><p>备注：在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml。 其中，一份位于站点根目录下，主要包含 Hexo 本身的站点配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。</p><p>为了描述方便，将前者<code>/_config.yml</code>称为<strong>站点配置文件</strong>， 后者<code>/themes/next/_config.yml</code>称为<strong>主题配置文件</strong>。</p><h2 id="修改语言">修改语言</h2><p>站点配置文件，搜索 <code>language</code> 后添加 <code>zh-CN</code></p><h2 id="设置mathjax引擎"><a href="https://github.com/theme-next/hexo-theme-next/blob/master/docs/zh-CN/MATH.md#%E6%8F%90%E4%BE%9B%E7%9A%84%E6%B8%B2%E6%9F%93%E5%BC%95%E6%93%8E">设置MathJax引擎</a></h2><ol type="1"><li><p><a href="https://pandoc.org/installing.html">安装Pandoc</a></p></li><li><p>卸载原有的渲染器<code>hexo-renderer-marked</code>，并安装<code>hexo-renderer-pandoc</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall hexo-renderer-marked</span><br><span class="line">npm install hexo-renderer-pandoc</span><br></pre></td></tr></table></figure></li><li><p>在<code>/themes/next/_config.yml</code>中将 <code>mathjax</code> 的 <code>enable</code> 打开</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">math:</span><br><span class="line">  ...</span><br><span class="line">  mathjax:</span><br><span class="line">    enable: true</span><br></pre></td></tr></table></figure></li><li><p>在对应的文档头部添加MathJax标记</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">title: Hexo使用教程</span><br><span class="line">date: 2021-06-25 23:45:57</span><br><span class="line">tags: [MarkDown,教程,hexo]</span><br><span class="line">categories: 软件</span><br><span class="line">mathjax: true</span><br></pre></td></tr></table></figure><p>注意：在修改配置选项时，<strong>不要更改配置的缩进</strong>；目前，NexT 的所有配置都采用<strong>2 空格的缩进</strong>；</p><p>如果配置的内容接在冒号后面，那么内容和冒号之间必须有一个空格(例如<code>enable: true</code>)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># Math Formulas Render Support</span><br><span class="line">math:</span><br><span class="line">  # Default (true) will load mathjax / katex script on demand.</span><br><span class="line">  # That is it only render those page which has `mathjax: true` in Front-matter.</span><br><span class="line">  # If you set it to false, it will load mathjax / katex srcipt EVERY PAGE.</span><br><span class="line">  per_page: true</span><br><span class="line"></span><br><span class="line">  # hexo-renderer-pandoc (or hexo-renderer-kramed) required for full MathJax support.</span><br><span class="line">  mathjax:</span><br><span class="line">    enable: true</span><br><span class="line">    # See: https://mhchem.github.io/MathJax-mhchem/</span><br><span class="line">    mhchem: false</span><br><span class="line"></span><br><span class="line">  # hexo-renderer-markdown-it-plus (or hexo-renderer-markdown-it with markdown-it-katex plugin) required for full Katex support.</span><br><span class="line">  katex:</span><br><span class="line">    enable: false</span><br><span class="line">    # See: https://github.com/KaTeX/KaTeX/tree/master/contrib/copy-tex</span><br><span class="line">    copy_tex: false</span><br></pre></td></tr></table></figure></li><li><p>公式示例：</p><p>行内公式<span class="math inline">\(\sin x+\sum_{i=1}^N=1\)</span></p><p>行间公式 <span class="math display">\[\begin{equation}\label{eq3}\begin{aligned}a&amp;=\begin{bmatrix}1&amp;2&amp;3\end{bmatrix}\\a&amp;=\begin{bmatrix}1\\2\\3\end{bmatrix}\\a&amp;\cdot b=\sum_{i=1}^{n}a_ib_i\end{aligned}\end{equation}\]</span> 如公式<span class="math inline">\(\eqref{eq3}\)</span></p></li></ol><h1 id="多端同步">多端同步</h1><ol type="1"><li>拷贝整个文件夹</li><li>对应的插件安装记录在根目录中<code>package.json</code>文件中，下载安装好就ok</li></ol><h1 id="其他功能配置">其他功能配置</h1><h2 id="首页以摘要的形式显示">首页以摘要的形式显示</h2><p>在文中加入<code>&lt;!-- more --&gt;</code>进行截断，截断前的内容将以摘要的形式显示</p><h2 id="添加标签页面">添加标签页面</h2><ol type="1"><li>在博客文件夹中，运行</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure><ol start="2" type="1"><li><p>编辑对应目录下的<code>index.md</code>文档题头，加入<code>type: "tags"</code></p></li><li><p>在主题配置文件中的<code>menu</code> 下把<code>tags: /tags/ || fa fa-tags</code>取消注释</p></li></ol><h2 id="添加分类界面">添加分类界面</h2><ol type="1"><li>同上，运行</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure><ol start="2" type="1"><li><p>然后修改md文件，加入<code>hexo new page categories</code></p></li><li><p>接着在主题配置文件中取消menu下的categories的注释</p></li></ol><h2 id="设置永久短链接">设置永久短链接</h2><ol type="1"><li><p>安装插件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure></li><li><p>在站点配置文件中，添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">permalink: posts/:abbrlink/</span><br><span class="line">abbrlink:</span><br><span class="line">  alg: crc32   #算法： crc16(default) and crc32</span><br><span class="line">  rep: hex     #进制： dec(default) and hex</span><br></pre></td></tr></table></figure></li></ol><h2 id="添加社交链接">添加社交链接</h2><p>在主题配置文件中，作出如下修改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">social:</span><br><span class="line">  GitHub: https://github.com/xiakong24 || fab fa-github #||后为图片，可以去Font Awesome icon官网查询对应的图标名称</span><br></pre></td></tr></table></figure><h2 id="添加版权信息">添加版权信息</h2><p>找到主题配置文件如下位置，并作出对应修改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">creative_commons:</span><br><span class="line">  license: by-nc-sa</span><br><span class="line">  sidebar: false</span><br><span class="line">  post: true</span><br></pre></td></tr></table></figure><p>可能需要在文章头部加入<code>copyright: true</code>项</p><h2 id="留言板功能">留言板功能</h2><ol type="1"><li>本博客采用的是<a href="https://www.jianshu.com/p/02fc71f3633f">Hexo集成Gitalk评论系统</a>，其特性为<ul><li>使用 GitHub 登录</li><li>支持多语言 [en, zh-CN, zh-TW, es-ES, fr, ru]</li><li>支持个人或组织</li><li>无干扰模式（设置 distractionFreeMode 为 true 开启）</li><li>快捷键提交评论 （cmd|ctrl + enter）</li></ul></li><li>要使用 Gitalk 需要先在 GitHub 上注册新应用，链接： <a href="https://github.com/settings/applications/new">https://github.com/settings/applications/new</a></li><li>参见1中网站进行设置，然后在主题配置文件中作出相应修改即可</li><li>在对应文档的题头加入<code>comments: true</code>开启或<code>comments: false</code>关闭评论</li></ol><h2 id="添加相册">添加相册</h2><p>参考博客<a href="https://blog.dlzhang.com/posts/31/">Hexo NexT 博客增加瀑布流相册页面</a></p><p>文档中插入图片，先上传至对应的文件夹中，然后md文件中地址为<code>photo/images/name.jpg</code>对应引用</p><p><img src="/doc/photo/images/山水.jpg" /></p><h1 id="参考资料">参考资料</h1><ol type="1"><li><a href="https://theme-next.js.org/">Hexo-NexT官方教程1</a></li><li><a href="https://hexo-next.readthedocs.io/">Hexo-NexT官方教程2</a></li><li><a href="https://blog.csdn.net/as480133937/article/details/100138838">Hexo-Next 主题博客个性化配置超详细，超全面(两万字)</a></li><li><a href="https://zh.wikipedia.org/wiki/Help:%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F">帮助:数学公式</a></li><li><a href="https://theme-next.iissnan.com/getting-started.html">Next简单教程</a></li><li><a href="https://www.jianshu.com/p/02fc71f3633f">Hexo集成Gitalk评论系统</a></li><li><a href="https://zhuanlan.zhihu.com/p/30836436">Hexo+Next主题优化</a></li></ol>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;hexonext的安装&quot;&gt;Hexo+Next的安装&lt;/h1&gt;
&lt;p&gt;本文是利用Hexo搭建并生成静态博客，将其托管于Github上，采用的博客主题为Next，一个热门且简洁的主题。以下是总结的简单教程。&lt;/p&gt;</summary>
    
    
    
    <category term="软件" scheme="https://xiakong24.github.io/doc/categories/%E8%BD%AF%E4%BB%B6/"/>
    
    
    <category term="MarkDown" scheme="https://xiakong24.github.io/doc/tags/MarkDown/"/>
    
    <category term="教程" scheme="https://xiakong24.github.io/doc/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="hexo" scheme="https://xiakong24.github.io/doc/tags/hexo/"/>
    
  </entry>
  
</feed>
